import Questionnaire
import GeminiConnect
import SpotifyConnect

#Main method used to first select which generation class to will be used,
#then prompt Gemini API for a playlist, then prompt Spotify API to generate the playlist
#to the user's account
def main():
    user_input = int(input("Please enter a number: 1. Questionnaire, 2. Playlist , 3. Artist, 4. Spotify Account \n"))
    
    prompt=""
    
    if user_input==1:
        prompt=Questionnaire.questionnaire()
        
    print(useGemini(prompt))

#@param String:prompt
#@return String: GeminiConnect.generate_playlist
#Used to fetch the playlist generated by Gemini API 
def useGemini(prompt):
    return GeminiConnect.generate_playlist(prompt)

#@param String: song_list
#Used to parse through the Gemini generated string of songs to create an array of songs
#specifying title, artist, and year. Afterwards, use Spotify API to search for the songs
#and generate a playlist on the account.
def useSpotify(song_list):
    songs=[]
    for line in song_list.strip().split('\n'):
        title, rest = line.split('-')
        artist, year= rest.split('(')
        year = year.rstrip(')')
        songs.append({'title': title, "artist": artist, "year": year})
    
    SpotifyConnect.search_songs(songs)
    
if __name__ == "__main__":
    main()
